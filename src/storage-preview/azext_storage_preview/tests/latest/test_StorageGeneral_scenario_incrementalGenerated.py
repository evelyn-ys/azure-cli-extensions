# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

import os
from azure.cli.testsdk import ScenarioTest
from azure.cli.testsdk import ResourceGroupPreparer
from .. import (
    try_manual,
    raise_if,
    calc_coverage
)


TEST_DIR = os.path.abspath(os.path.join(os.path.abspath(__file__), '..'))


# Env setup_scenario
@try_manual
def setup_scenario(test, rg):
    pass


# Env cleanup_scenario
@try_manual
def cleanup_scenario(test, rg):
    pass


# Testcase: Scenario
@try_manual
def call_scenario(test, rg):
    setup_scenario(test, rg)
    # STEP NOT FOUND: StorageAccountCreate
    # STEP NOT FOUND: PutFileServices
    # STEP NOT FOUND: PutBlobServices
    # STEP NOT FOUND: StorageAccountPutEncryptionScope
    # STEP NOT FOUND: StorageAccountSetManagementPolicies
    # STEP NOT FOUND: PutShares
    # STEP NOT FOUND: StorageAccountPutPrivateEndpointConnection
    # STEP NOT FOUND: PutContainers
    # STEP NOT FOUND: CreateOrUpdateImmutabilityPolicy
    # STEP NOT FOUND: GetImmutabilityPolicy
    # STEP NOT FOUND: GetContainers
    # STEP NOT FOUND: StorageAccountGetPrivateEndpointConnection
    # STEP NOT FOUND: GetShares
    # STEP NOT FOUND: StorageAccountGetManagementPolicies
    # STEP NOT FOUND: ListContainers
    # STEP NOT FOUND: StorageAccountGetEncryptionScope
    # STEP NOT FOUND: ListShares
    # STEP NOT FOUND: GetBlobServices
    # STEP NOT FOUND: GetFileServices
    # STEP NOT FOUND: StorageAccountListPrivateLinkResources
    # STEP NOT FOUND: StorageAccountEncryptionScopeList
    # STEP NOT FOUND: ListBlobServices
    # STEP NOT FOUND: ListFileServices
    # STEP NOT FOUND: StorageAccountGetProperties
    # STEP NOT FOUND: StorageAccountListByResourceGroup
    # STEP NOT FOUND: UsageList
    # STEP NOT FOUND: StorageAccountList
    # STEP NOT FOUND: SkuList
    # STEP NOT FOUND: OperationsList
    # STEP NOT FOUND: ExtendImmutabilityPolicy
    # STEP NOT FOUND: LockImmutabilityPolicy
    # STEP NOT FOUND: ClearLegalHoldContainers
    # STEP NOT FOUND: SetLegalHoldContainers
    # STEP NOT FOUND: Break a lease on a container
    # STEP NOT FOUND: Acquire a lease on a container
    # STEP NOT FOUND: UpdateContainers
    # STEP NOT FOUND: UpdateShares
    # STEP NOT FOUND: StorageAccountPatchEncryptionScope
    # STEP NOT FOUND: StorageAccountRevokeUserDelegationKeys
    # STEP NOT FOUND: BlobRangesRestore
    # STEP NOT FOUND: StorageAccountListServiceSAS
    # STEP NOT FOUND: StorageAccountListAccountSAS
    # STEP NOT FOUND: StorageAccountRegenerateKey
    # STEP NOT FOUND: StorageAccountRegenerateKerbKey
    # STEP NOT FOUND: StorageAccountListKeys
    # STEP NOT FOUND: StorageAccountFailover
    # STEP NOT FOUND: StorageAccountEnableAD
    # STEP NOT FOUND: StorageAccountUpdate
    # STEP NOT FOUND: StorageAccountCheckNameAvailability
    # STEP NOT FOUND: DeleteImmutabilityPolicy
    # STEP NOT FOUND: DeleteContainers
    # STEP NOT FOUND: StorageAccountDeletePrivateEndpointConnection
    # STEP NOT FOUND: DeleteShares
    # STEP NOT FOUND: StorageAccountDeleteManagementPolicies
    # STEP NOT FOUND: StorageAccountDelete
    cleanup_scenario(test, rg)


# Test class for Scenario
@try_manual
class StorageGeneralScenarioTest(ScenarioTest):

    @ResourceGroupPreparer(name_prefix='cliteststorage_res6977'[:7], key='rg', parameter_name='rg')
    def test_StorageGeneral_Scenario(self, rg):

        call_scenario(self, rg)
        calc_coverage(__file__)
        raise_if()

